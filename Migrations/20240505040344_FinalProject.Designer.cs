// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewSound.Data;

#nullable disable

namespace NewSound.Migrations
{
    [DbContext(typeof(NewSoundContext))]
    [Migration("20240505040344_FinalProject")]
    partial class FinalProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NewSound.Models.Bar", b =>
                {
                    b.Property<int>("BarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BarID"), 1L, 1);

                    b.Property<string>("Alkohol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredient")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BarID");

                    b.ToTable("Bar");
                });

            modelBuilder.Entity("NewSound.Models.ConcertHall", b =>
                {
                    b.Property<int>("ConcertHallID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConcertHallID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BarID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxAmount")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConcertHallID");

                    b.HasIndex("BarID");

                    b.ToTable("ConcertHall");
                });

            modelBuilder.Entity("NewSound.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantID"), 1L, 1);

                    b.Property<int>("ConcertHallID")
                        .HasColumnType("int");

                    b.Property<string>("Cuisine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mile")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantID");

                    b.HasIndex("ConcertHallID");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("NewSound.Models.Ticket", b =>
                {
                    b.Property<int>("TicketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketID"), 1L, 1);

                    b.Property<int>("ConcertHallID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TicketID");

                    b.HasIndex("ConcertHallID");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("NewSound.Models.ConcertHall", b =>
                {
                    b.HasOne("NewSound.Models.Bar", "Bars")
                        .WithMany("ConcertHalls")
                        .HasForeignKey("BarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bars");
                });

            modelBuilder.Entity("NewSound.Models.Restaurant", b =>
                {
                    b.HasOne("NewSound.Models.ConcertHall", "ConcertHalls")
                        .WithMany("Restaurants")
                        .HasForeignKey("ConcertHallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcertHalls");
                });

            modelBuilder.Entity("NewSound.Models.Ticket", b =>
                {
                    b.HasOne("NewSound.Models.ConcertHall", "ConcertHall")
                        .WithMany("Tickets")
                        .HasForeignKey("ConcertHallID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConcertHall");
                });

            modelBuilder.Entity("NewSound.Models.Bar", b =>
                {
                    b.Navigation("ConcertHalls");
                });

            modelBuilder.Entity("NewSound.Models.ConcertHall", b =>
                {
                    b.Navigation("Restaurants");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
